@using Ciam.Models
@model Ciam.Models.SalesStatusViewModel

<script type="text/javascript">
    $(function () {
        $("#create_or_edit_status").submit(function (e) {
            e.preventDefault();
            $('span[data-valmsg-for="*"]').text("");
            $.ajax({
                type: 'POST',
                url: $(this).attr("action"),
                data: $(this).find("input,select").serialize(),
                success: function (data) {
                    if (data.status) {
                        new ModalDialog({
                            modalForm: $("#create_or_edit_status").closest('div.modal')
                        }).hideDialog();
                    } else {
                        DisplayErrors("create_or_edit_status", data.errors);
                    }
                },
                error: function (request) {
                    console.log(request);
                }
            });
        });
    })
</script>

<div class="modal-header">
    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
    <h4 class="modal-title">Добавить статус</h4>
</div>
<form id="create_or_edit_status" asp-action="CreateOrEdit" asp-controller="SalesStatus" method="POST" data-ajax="true" class = "form-horizontal">
    <div class="modal-body">
        <div data-valmsg-summary="false" class="text-danger validation-summary-errors">
            <ul></ul>
        </div>
        @Html.HiddenFor(x => x.Id)
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                @Html.EditorFor(x => x.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-12">
                @(Html.Kendo().Grid<SalesStatusViewModel>()
                              .Name("GridSalesStatus")
                              .Columns(c =>
                              {
                                  c.Bound(b => b.Id).Hidden();
                                  c.Bound(b => b.Name);
                              })
                              .Pageable(pager => pager.Refresh(false))
                              .Sortable()
                              .DataSource(ds => ds.Ajax().PageSize(5).Read(read => read.Action("GetData", "SalesStatus", new { area = "" })).Sort(sort => sort.Add(x => x.Name).Ascending()))
                )
            </div>
        </div>
    </div>
    <div class="modal-footer">
        <button type="button" class="btn btn-default" data-dismiss="modal">Отменить</button>
        <button type="submit" class="btn btn-primary">Сохранить</button>
    </div>
</form>
